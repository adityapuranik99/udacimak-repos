{
  "data": {
    "lesson": {
      "id": 1012943,
      "key": "46a61cca-473f-483a-9d4d-0e75eb76bf1c",
      "title": "Orchestration with Kubernetes",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Kubernetes is a powerful tool that is often used to deploy containers. In this lesson we’ll learn about why we would consider using Kubernetes and to deploy our applications",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/46a61cca-473f-483a-9d4d-0e75eb76bf1c/1012943/1586986355331/Kubernetes+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/46a61cca-473f-483a-9d4d-0e75eb76bf1c/1012943/1586986347898/Kubernetes+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 1012933,
          "key": "83362f8f-3cd2-4e19-b763-9802642744ac",
          "title": "Orchestration With Kubernetes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "83362f8f-3cd2-4e19-b763-9802642744ac",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012916,
              "key": "6d9c8638-229a-4c02-a943-15f8665223e9",
              "title": "Orchestration With Kubernetes Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Service Orchestration With Kubernetes",
              "instructor_notes": ""
            },
            {
              "id": 1012904,
              "key": "249781fc-b2ea-41e3-8bc1-b35339fe4100",
              "title": "ND9990 CDND C03 L04 A01 Orchestration With Kubernetes V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vR9IgeC5mbk",
                "china_cdn_id": "vR9IgeC5mbk.mp4"
              }
            },
            {
              "id": 1012864,
              "key": "e5ee2ca2-598c-42dc-a701-6abae77ead6e",
              "title": "Lesson Outline",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/April/5e92432c_cdnd-c3-l4-outline/cdnd-c3-l4-outline.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e5ee2ca2-598c-42dc-a701-6abae77ead6e",
              "caption": "**Our lesson content will tie in the _continuous deployment_ part of our CI/CD pipeline.**",
              "alt": "Our lesson content will tie in with the _continuous deployment_ part of our CI/CD pipeline.",
              "width": 960,
              "height": 540,
              "instructor_notes": null
            },
            {
              "id": 1012866,
              "key": "4c2c3df4-d578-4c47-8987-5a5910421864",
              "title": "Orchestration With Kubernetes Summary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In this lesson, we’re going to explore the concept of service orchestration and how using Kubernetes as our service orchestration tool enables our continuous deployment.\n\nWe’ll cover topics including:\n- Why Orchestration?\n- Kubernetes Fundamentals\n- Kubernetes on AWS\n- Using a Kubernetes Cluster\n- Other Deployment Strategies",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012942,
          "key": "9d03f831-14dc-461b-b1be-ca495f52b105",
          "title": "Why Orchestration?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9d03f831-14dc-461b-b1be-ca495f52b105",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012868,
              "key": "afb196fe-4cff-4ea9-b93f-00a089a62fae",
              "title": "Why Orchestration? Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Thinking About Orchestration",
              "instructor_notes": ""
            },
            {
              "id": 1012874,
              "key": "a8a3dac1-22a4-4431-8c7b-72ff4cd70021",
              "title": "ND9990 CDND C03 L04 A02 Why Orchestration V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "mCh6FoNxE4k",
                "china_cdn_id": "mCh6FoNxE4k.mp4"
              }
            },
            {
              "id": 1012867,
              "key": "c37f7288-4d6e-47f6-8706-8bd2e71a2a1b",
              "title": "Why Orchestration? Summary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Orchestration is the automated management of the lifecycle of our application**\n\n* With CI/CD, if Travis is our CI tool, then Kubernetes is our CD tool\n* Orchestration helps us handle complicated workflows in deploying our application\n* Helps us automate our deployment process for continuous deployment",
              "instructor_notes": ""
            },
            {
              "id": 1012865,
              "key": "6b8f99b2-b5d6-4704-8c76-6181f1c096f7",
              "title": "Why Orchestration? Quiz 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6b8f99b2-b5d6-4704-8c76-6181f1c096f7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following is not a benefit of orchestration?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Cleaner code",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Automated updates",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Recover from failure",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 1016013,
              "key": "a15cc47e-23f6-4145-9ee4-a5104df80958",
              "title": "Why Orchestration Quiz 2",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a15cc47e-23f6-4145-9ee4-a5104df80958",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following features helps with continuous deployment?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Automation",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Workflows",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Scalability",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1012925,
          "key": "f7e9dd62-9621-4676-88da-ee35862f7e99",
          "title": "Kubernetes Fundamentals",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f7e9dd62-9621-4676-88da-ee35862f7e99",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012879,
              "key": "e6198283-da14-4515-9b09-549cb10ebd94",
              "title": "Kubernetes Fundamentals Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "##  Fundamentals of Kubernetes",
              "instructor_notes": ""
            },
            {
              "id": 1012870,
              "key": "902a2fd0-6531-4c1b-b423-1131a8c23461",
              "title": "ND9990 CDND C03 L04 A03 Kubernetes Fundamentals",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "H6eSgrdyOAw",
                "china_cdn_id": "H6eSgrdyOAw.mp4"
              }
            },
            {
              "id": 1012869,
              "key": "6aebb919-42bb-4ed3-b609-135c451cdb22",
              "title": "Kubernetes Fundamentals Notes",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Key Points  \n\n#### Kubernetes  \n\n- A container orchestration system packed with features for automating our application’s deployment\n- Enables us to easily scale our application and ship new code\n\n#### Pods\n- Containers often need to communicate with one another. It's not uncommon to see a deployment involving a few containers to be deployed. \n- Kubernetes ***pods*** are abstractions of multiple containers and are also ephemeral.\n\n#### Services\n- Applications are often deployed with multiple ***replicas***. This helps with ***load balancing*** and ***horizontal scaling***.\n\n- ***Services*** are an abstraction of a set of pods to expose them through a network.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1012889,
              "key": "55dad28a-4b30-443a-921e-32852ac7dff4",
              "title": "Kubernetes Fundamentals Image",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/April/5e99a554_cdnd-c3-l4-pods/cdnd-c3-l4-pods.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/55dad28a-4b30-443a-921e-32852ac7dff4",
              "caption": "**A service is an abstraction of pods and pods are abstractions of containers**",
              "alt": "A service is an abstraction of pods and pods are abstractions of containers",
              "width": 702,
              "height": 288,
              "instructor_notes": null
            },
            {
              "id": 1012863,
              "key": "382271d4-7fca-44c2-a620-7e3f9f61d714",
              "title": "Kubernetes Fundamentals New Terms or Vocabulary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### New Terms  \n| Term \t| Description \t|\n|--------------------\t|-----------------------\t|\n| Horizontal Scaling \t| Handling increased traffic by creating additional replicas so that traffic can be divided across the replicas \t|\n| Kubernetes Service \t| An abstraction of a set of pods and interface for how to interact with the pods \t|\n| Kubernetes Service \t| A set of containers that are deployed together \t|\n| Load Balancing \t| Handling traffic by distributing it across different endpoints \t|\n| Replica \t| A redundant copy of a resource often used for backups or load balancing \t|\n| Consumer \t| An external entity such as a user or program that interfaces with an application \t|",
              "instructor_notes": ""
            },
            {
              "id": 1012875,
              "key": "c643d214-5346-4168-9557-f3d88334716f",
              "title": "Kubernetes Fundamentals Further Research",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Additional Reading\nThe following are some additional resources for learning more details about service orchestration:\n* [Container Wars](https://codefresh.io/containers/age-container-wars/)\n* [Kubernetes Documentation](https://kubernetes.io/docs/home/)\n* [Round Robin Load Balancing](https://www.nginx.com/resources/glossary/round-robin-load-balancing/)\n* [Docker with Kubernetes](https://www.docker.com/products/kubernetes)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012934,
          "key": "aee27bdf-6704-4933-b829-626782c892de",
          "title": "Kubernetes Quizzes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "aee27bdf-6704-4933-b829-626782c892de",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1013062,
              "key": "84215c86-f650-493b-9e08-8563dbe14c99",
              "title": "Kubernetes Fundamentals",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "84215c86-f650-493b-9e08-8563dbe14c99",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the following terms with their definitions"
                },
                "concepts_label": "Description",
                "answers_label": "Concept",
                "concepts": [
                  {
                    "text": "Abstraction of pods and their interfaces",
                    "correct_answer": {
                      "id": "a1586660608225",
                      "text": "Kubernetes Service"
                    }
                  },
                  {
                    "text": "Abstraction of multiple containers",
                    "correct_answer": {
                      "id": "a1586660655520",
                      "text": "Kubernetes Pod"
                    }
                  },
                  {
                    "text": "Abstraction of an application and its dependencies",
                    "correct_answer": {
                      "id": "a1586660666410",
                      "text": "Container"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1586660666410",
                    "text": "Container"
                  },
                  {
                    "id": "a1586660608225",
                    "text": "Kubernetes Service"
                  },
                  {
                    "id": "a1586660655520",
                    "text": "Kubernetes Pod"
                  }
                ]
              }
            },
            {
              "id": 1012872,
              "key": "1895a807-62b6-4422-9b8f-f32da5e10ce8",
              "title": "Kubernetes Fundamentals Hard Quiz",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1895a807-62b6-4422-9b8f-f32da5e10ce8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What's the purpose of wrapping pods as a service? Why not just expose pods directly?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Reduce costs by having less services",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "User shouldn’t care when pods are destroyed",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Too many pods will slow down Kubernetes",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 1012914,
              "key": "fec52bcb-c86a-4e3a-8f1d-3455fca33429",
              "title": "Quiz Solution Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012878,
              "key": "bc35824d-96a4-407e-bb82-03a95586407b",
              "title": "ND9990 CDND C03 L04 A04 Kubernetes Fundamentals Hard Quiz Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "c80xUrYYirs",
                "china_cdn_id": "c80xUrYYirs.mp4"
              }
            }
          ]
        },
        {
          "id": 1012941,
          "key": "697d917c-37c9-4900-8e48-09e0c93b5c49",
          "title": "Kubernetes on AWS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "697d917c-37c9-4900-8e48-09e0c93b5c49",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012913,
              "key": "aff3131d-5248-48c7-9061-03f977e0d17b",
              "title": "Kubernetes on AWS Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Configuring Kubernetes",
              "instructor_notes": ""
            },
            {
              "id": 1012881,
              "key": "ddb803fa-41d2-4881-b55c-6e5ee815c420",
              "title": "ND9990 CDND C03 L04 A05 Part 1 Kubernetes On AWS V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4fDXi0EDy2I",
                "china_cdn_id": "4fDXi0EDy2I.mp4"
              }
            },
            {
              "id": 1012920,
              "key": "4232591d-bcd5-4c5e-8012-fad122e92c54",
              "title": "Kubernetes on AWS Notes",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Key Points\n\n* AWS EKS is a service that we can use to set up Kubernetes.\n\n* The `deployment.yaml` file is used to specify how our pods should be created.\n- The  `service.yaml` file is used to specify how our pods are exposed.\n\n***deployment.yaml***\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app\n  labels:\n    app: my-app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n      - name: simple-node\n        image: YOUR_DOCKER_HUB/simple-node\n        ports:\n        - containerPort: 80\n```\n\n***service.yaml***\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-app\n  labels:\n    run: my-app\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n  selector:\n    run: my-app\n```",
              "instructor_notes": ""
            },
            {
              "id": 1012929,
              "key": "122ba518-56f7-46fa-8a57-f144d628a395",
              "title": "Kubernetes on AWS heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Creating a Kubernetes Cluster on AWS",
              "instructor_notes": ""
            },
            {
              "id": 1012910,
              "key": "3d7d52fb-a317-4225-856d-244c56e8ecd1",
              "title": "ND9990 CDND C03 L04 A05 Part 2 Creating A Cluster",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "FvfnIeB1uoQ",
                "china_cdn_id": "FvfnIeB1uoQ.mp4"
              }
            },
            {
              "id": 1012907,
              "key": "7a56c00a-c558-404b-90d5-cf214b446eb7",
              "title": "Kubernetes recap",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Creating an EKS Cluster\n1. _Create cluster_ in EKS\n2. Create and specify role for Kubernetes cluster\n3. Enable public access\n\n### Creating a Node Group\n1. _Add Node Group_ in the newly-created cluster\n2. Create and specify role for IAM role for node group\n3. Create and specify SSH key for node group\n4. Set instance type to `t3.micro` for cost-savings as we learn how to use Kubernetes\n5. Specify desired number of nodes",
              "instructor_notes": ""
            },
            {
              "id": 1012917,
              "key": "2b2eb5a0-0148-4944-9b55-8878b398fcb1",
              "title": "Kubernetes on AWS Heading Image",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/April/5e92462d_cdnd-c3-l4-kubernetes/cdnd-c3-l4-kubernetes.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/2b2eb5a0-0148-4944-9b55-8878b398fcb1",
              "caption": "Docker images are loaded from the container registry into Kubernetes pods. Access to the pods are exposed to consumers through a service.",
              "alt": "Docker images are loaded from the container registry into Kubernetes pods. Access to the pods are exposed to consumers through a service.",
              "width": 959,
              "height": 369,
              "instructor_notes": null
            },
            {
              "id": 1012882,
              "key": "7dd61093-caf6-4d56-b5f2-cf8bc5065fce",
              "title": "Kubernetes on AWS Further Research",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Additional Reading\nThe following are some additional resources for more information about EKS.\n* [AWS EKS](https://aws.amazon.com/eks/)\n* [AWS EKS Versioning](https://aws.amazon.com/blogs/compute/updates-to-amazon-eks-version-lifecycle/)\n* [Why use EKS](https://itnext.io/kubernetes-is-hard-why-eks-makes-it-easier-for-network-and-security-architects-ea6d8b2ca965)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012935,
          "key": "c858205b-1bec-4e5c-8c79-bc34e171b97c",
          "title": "Kubernetes on AWS Quizzes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c858205b-1bec-4e5c-8c79-bc34e171b97c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012911,
              "key": "456944c6-b8e2-4f14-a473-667498560645",
              "title": "Kubernetes on AWS Easy Quiz",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "456944c6-b8e2-4f14-a473-667498560645",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In the deployment YAML file below, where are the number of replicas set?\n\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx-app\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.7.9\n        ports:\n        - containerPort: 80\n```",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "`containerPort: 80`",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "`app: nginx`",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "`kind: Deployment`",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "`replicas: 3`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 1012918,
              "key": "12dafe7d-5a8a-4fda-8bab-ce598a89a95d",
              "title": "Kubernetes on AWS Hard Quiz",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "12dafe7d-5a8a-4fda-8bab-ce598a89a95d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Why are the deployments and services in Kubernetes defined as YAML files?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "YAML makes our code faster.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Kubernetes is written in YAML and thus can only parse YAML.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Travis CI uses YAML.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "YAML is a simple and efficient way to specify our configurations.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 1012871,
              "key": "89d18a28-141f-4fe4-882c-d5d4e521e625",
              "title": "Quiz Solution heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012912,
              "key": "299ff48b-1051-444c-92c6-7be6bae317eb",
              "title": "ND9990 CDND C03 L04 A06 Kubernetes On AWS Hard Quiz Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TbdBHEeESkI",
                "china_cdn_id": "TbdBHEeESkI.mp4"
              }
            }
          ]
        },
        {
          "id": 1012930,
          "key": "171768fd-f542-4ced-85da-ae8f2929acd1",
          "title": "Exercise: Kubernetes on AWS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "171768fd-f542-4ced-85da-ae8f2929acd1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012877,
              "key": "af696f2b-e7fc-44a0-982c-003ca9c5eee7",
              "title": "Exercise: Kubernetes on AWS Instructions",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Given our [Simple Node](https://github.com/udacity/nd9990-c3-microservices-exercises/tree/master/lesson-4-intro-to-orchestration-with-kubernetes/exercises/kubernetes-on-aws) project as our starter code, write a `deployment.yaml` file and `service.yaml` file.",
              "instructor_notes": ""
            },
            {
              "id": 1012909,
              "key": "5478bfbd-3216-4eab-997e-d3c957df8e64",
              "title": "Kubernetes on AWS",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5478bfbd-3216-4eab-997e-d3c957df8e64",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a `deployment.yaml` file",
                "Create a `service.yaml` file"
              ],
              "positive_feedback": "Great work! You’ve set up the key component of how to get an application into Kubernetes!",
              "video_feedback": null,
              "description": "Write deployment and service YAML for a simple Dockerized project"
            }
          ]
        },
        {
          "id": 1012926,
          "key": "1e402be4-0270-4692-bae7-42c47474c970",
          "title": "Solution: Kubernetes on AWS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1e402be4-0270-4692-bae7-42c47474c970",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012880,
              "key": "abb98842-b598-4b59-b2ef-90ac38d3a635",
              "title": "Solution: Kubernetes on AWS Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## My Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012898,
              "key": "e9418048-1953-422a-b20e-f1e8520096e4",
              "title": "ND9990 CDND C03 L04 A07 Solution Kubernetes On AWS V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KNXt58Kg7WM",
                "china_cdn_id": "KNXt58Kg7WM.mp4"
              }
            },
            {
              "id": 1012886,
              "key": "7fac7a50-00d2-4f20-8284-e249291a637e",
              "title": "Solution: Kubernetes on AWS Summary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Overview\nKubernetes YAML files have many possible configurations and are very open-ended. The solution I have is one example of how we can set up our files.\n\nSome key areas to note are that:\n* `kind: Deployment` and `kind: Service` denotes how Kubernetes will process the file.\n* `replicas` specifies the number of replicas that we want. This corresponds to the number of pods that will be created for one deployment.\n* `containers` in `deployment.yaml` specifies the source for our Docker image\n\n### Deployment YAML\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app\n  labels:\n    app: my-app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n      - name: simple-api\n        image: <ECR_REPOSITORY>\n        ports:\n        - containerPort: 80\n```\n### Service YAML\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-app\n  labels:\n    run: my-app\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n  selector:\n    run: my-app\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012937,
          "key": "5a02d992-0c8d-408d-8b41-8dda6b85b9a7",
          "title": "Kubernetes Cluster",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5a02d992-0c8d-408d-8b41-8dda6b85b9a7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012884,
              "key": "57ae6d47-8cf5-43cf-9c2c-ec0d66f03033",
              "title": "Kubernetes Cluster Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Deploy Microservices With K8s",
              "instructor_notes": ""
            },
            {
              "id": 1012893,
              "key": "015fbff1-f5f0-4519-9977-88ddaf234e89",
              "title": "ND9990 CDND C03 L04 A08 Kubernetes Cluseter Walktrhough",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ZueyF5iCcgk",
                "china_cdn_id": "ZueyF5iCcgk.mp4"
              }
            },
            {
              "id": 1012915,
              "key": "63fadb1d-c6f0-4fdb-8f3f-7255ca363cf2",
              "title": "Kubernetes Cluster Notes",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "At this point, we have a Kubernetes cluster set up and understand how YAML files can be created to handle the deployment of pods and expose them to consumers. Moving forward, we’ll be using the Kubernetes command-line tool, `kubectl`,  to interact with our cluster.\n\n### Interacting With Your Cluster\n1. [Install `kubectl`](https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html)\n2. [Set up `aws-iam-authenticator`](https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html)\n3. [Set up `kubeconfig`](https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html)\n\n### Loading YAML files\n* `kubectl apply` - create deployment and service\n\n```\nkubectl apply -f deployment.yaml\n```\n\n### Introductory Commands\n`kubectl` provides a wide range of commands to interact with Kubernetes. The following are some basic commands that we can use to interact with our current cluster.\n* `kubectl get pods` - show the pods in the cluster\n* `kubectl describe services` - show the services in the cluster\n* `kubectl cluster-info` - display information about the cluster",
              "instructor_notes": ""
            },
            {
              "id": 1012919,
              "key": "e71a4516-3c30-498a-83f5-9769249e174a",
              "title": "Kubernetes Cluster Heading Image",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/April/5e9246e9_cdnd-c3-l4-kubectl/cdnd-c3-l4-kubectl.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e71a4516-3c30-498a-83f5-9769249e174a",
              "caption": "**We will be interfacing with our Kubernetes cluster with the Kubernetes command-line tool `kubectl`. The YAML files that we created will be loaded through this tool.**",
              "alt": "We will be interfacing with our Kubernetes cluster with the Kubernetes command-line tool `kubectl`. The YAML files that we created will be loaded through this tool.",
              "width": 797,
              "height": 204,
              "instructor_notes": null
            },
            {
              "id": 1012900,
              "key": "4f8880da-37dd-4230-93e3-80725d53c334",
              "title": "Kubernetes Cluster Heading New Terms",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### New Term  \n<br>\n\n| Term \t| Description \t|\n|--------------------\t|-----------------------\t|\n| Cluster \t| A group of resources that are connected to act as a single system \t|\n",
              "instructor_notes": ""
            },
            {
              "id": 1012892,
              "key": "500c7075-7c8d-4c84-adf8-af3888cd545d",
              "title": "Kubernetes Cluster Further Research",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Additional Reading\nThe following are some additional information on interacting with Kubernetes\n* [Kubernetes Cheatsheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/)\n* [`kubectl` Overview](https://kubernetes.io/docs/reference/kubectl/overview/)\n* [Kubernetes API](https://kubernetes.io/docs/concepts/overview/kubernetes-api/)\n* [`kubectl` Documentation](https://kubectl.docs.kubernetes.io/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012936,
          "key": "068dc7c1-2cd7-455d-83a5-62da508ae772",
          "title": "Kubernetes Cluster Quizzes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "068dc7c1-2cd7-455d-83a5-62da508ae772",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012922,
              "key": "110fca99-ac70-488b-9f43-9680414bf815",
              "title": "Kubernetes Cluster Easy Quiz",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "110fca99-ac70-488b-9f43-9680414bf815",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What command is used to check pods?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "`kubectl describe services`",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "`kubectl logs`",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "`kubectl get pods`",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "`kubectl exec -it <POD_NAME> bash`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 1012876,
              "key": "912b1351-dd47-46bf-9a28-ffa2de636c37",
              "title": "Kubernetes Cluster Hard Quiz",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "912b1351-dd47-46bf-9a28-ffa2de636c37",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What’s the best practice for handling sensitive strings such as passwords using deployments in Kubernetes?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Manually encrypt them",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Manually enter them in a deployed environment",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Write a script that injects the value into the pod",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Use environment variables that are pulled as Kubernetes Secrets",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 1012896,
              "key": "9ae07820-7946-48de-bfd4-eb7958781d9b",
              "title": "Quiz Solution Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012895,
              "key": "aace6c34-16b1-44a4-bb41-1497ea22580c",
              "title": "ND9990 CDND C03 L04 A09 Kubernetes Cluster Hard Quiz Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7FGfPT23n-s",
                "china_cdn_id": "7FGfPT23n-s.mp4"
              }
            }
          ]
        },
        {
          "id": 1012939,
          "key": "e6dfde34-3757-468d-9fce-f50e8e893e2d",
          "title": "Exercise: Kubernetes Cluster",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e6dfde34-3757-468d-9fce-f50e8e893e2d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012888,
              "key": "dbf4a614-9d74-41a7-b283-cf4a94068f4b",
              "title": "Exercise: Kubernetes Cluster Instructions",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Using the YAML files that we created, set them up in Kubernetes so that it can pull the latest Docker image from your DockerHub.",
              "instructor_notes": ""
            },
            {
              "id": 1012921,
              "key": "45986940-01a6-4af2-9c58-18336196f9ef",
              "title": "Kubernetes Cluster",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "45986940-01a6-4af2-9c58-18336196f9ef",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Set up `kubectl` to work with your EKS cluster",
                "Load `deployment.yaml` file to EKS",
                "Load `service.yaml` file to EKS"
              ],
              "positive_feedback": "Excellent! Your Kubernetes pods should be ready to go!",
              "video_feedback": null,
              "description": "Set up Kubernetes to pull the latest Docker image from your DockerHub using the YAML files we created in the previous lesson."
            }
          ]
        },
        {
          "id": 1012927,
          "key": "ff2b4ba3-7184-48e1-b46f-d4a57fe85ae3",
          "title": "Solution: Kubernetes Cluster",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ff2b4ba3-7184-48e1-b46f-d4a57fe85ae3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012887,
              "key": "e6a5543c-4a3d-44af-a201-83427af932e6",
              "title": "Solution: Kubernetes Cluster Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## My Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012883,
              "key": "16cefc88-6373-4b14-86a9-9a07bbdbcaea",
              "title": "ND9990 CDND C03 L04 A10 Solution Kubernetes Cluster",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WZvUZtZlsck",
                "china_cdn_id": "WZvUZtZlsck.mp4"
              }
            },
            {
              "id": 1012891,
              "key": "f1c6f147-4dc9-44f6-81d6-0243835cbd0c",
              "title": "Solution: Kubernetes Cluster Summary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Key Points    \n\nBy loading these configuration files to the Kubernetes cluster, we have set up Kubernetes to pull the Docker image from DockerHub. \n\nTo verify the functionality, we can run the commands `kubectl get pods` and `kubectl describe services`.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012928,
          "key": "e4d8fe43-6062-4adc-8afb-05299aadb588",
          "title": "Other Deployment Strategies",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e4d8fe43-6062-4adc-8afb-05299aadb588",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012897,
              "key": "85f3d139-3fff-4272-80b6-c5b4a7052c75",
              "title": "Other Deployment Strategies Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Alternative Deployment Strategies",
              "instructor_notes": ""
            },
            {
              "id": 1012890,
              "key": "4217f5a9-9122-42f0-a0ad-72a37bf487db",
              "title": "ND9990 CDND C03 L04 A11 Other Deployment Strategies",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3DVmLgPS4_Q",
                "china_cdn_id": "3DVmLgPS4_Q.mp4"
              }
            },
            {
              "id": 1012885,
              "key": "2c7508ce-1f1c-4323-a766-955838c42a87",
              "title": "Other Deployment Strategies Notes",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Alternative Deployment Strategies\nKubernetes is one solution for deploying your containers. It's packed with features but can sometimes be overwhelming. As we've mentioned before, choosing a tool comes with its own set of tradeoffs. Here are a few other popular technologies that are used in the industry today.\n\n- **AWS ECS**  \nAWS' proprietary solution that predates AWS EKS. It integrates very well with other AWS tools and is a bit more straightforward as it is not as feature-packed as Kubernetes.\n<br><br>  \n- **AWS Fargate**   \nAWS tool that helps streamline deploying containers to ECS and EKS.\n<br><br>  \n- **Docker**  \nIt's an option to simply run the container manually with Docker. Sometimes, it's tempting to pick a shiny hot tool that may lead to overengineered architectures.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012940,
          "key": "315c3b90-7223-461b-91ea-605a60637c94",
          "title": "Exercise: Debugging",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "315c3b90-7223-461b-91ea-605a60637c94",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012924,
              "key": "166acc50-e331-456a-ac97-21ca1013c382",
              "title": "Final Review Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Debugging Kubernetes\n\nWith Docker, we were able to connect to the container as one approach for debugging. Look through [the documentation here](https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/) and see how we can do something similar by connecting to a pod in kubernetes.",
              "instructor_notes": ""
            },
            {
              "id": 1012899,
              "key": "bb895572-8692-483f-9441-6de6d73a4277",
              "title": "Connecting to a Pod",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bb895572-8692-483f-9441-6de6d73a4277",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Verify pods are running in your cluster",
                "Look through [the documentation here](https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/)  for the command to connect to a pod",
                "Run the command to connect"
              ],
              "positive_feedback": "Nice work! You went through documentation and found the appropriate command to connect to a Kubernetes pod. As it’s impractical to memorize every command, developers often need to be able to read through documentation.",
              "video_feedback": null,
              "description": "Using your Kubernetes skills and your documentation skills to figure out how to connect to a Pod."
            }
          ]
        },
        {
          "id": 1012938,
          "key": "f79ceb32-c35f-4f3c-90a3-854af768b2ee",
          "title": "Solution: Debugging",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f79ceb32-c35f-4f3c-90a3-854af768b2ee",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012908,
              "key": "bfeaee53-d815-4751-914b-6edbaf77b1e1",
              "title": "My Solution heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ## My Solution",
              "instructor_notes": ""
            },
            {
              "id": 1012923,
              "key": "04dab69c-1002-4d0e-bdb0-14a6cf283e36",
              "title": "ND9990 CDND C03 L04 A12 Debugging Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "v-7pIP6dF0o",
                "china_cdn_id": "v-7pIP6dF0o.mp4"
              }
            },
            {
              "id": 1012905,
              "key": "0f31fcd2-f06b-4568-8e98-b5e2c5f28c79",
              "title": "Debugging Solution Recap",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To attach to a container in a pod, we can use the following command:\n```bash\nkubectl exec -it {pod_name} /bin/bash\n```\nThis is a powerful tool that allows us to run and test commands directly inside the context of our pods.\n\nSimilar to the command that we used with Docker, we don’t want to rely on this command for modifying the code or state that’s running inside of the pod. The command should only be used for troubleshooting. Pods are ephemeral and we should create a new image to address any changes.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012932,
          "key": "a660ac4c-3fdd-4be6-9c2e-79d41ea0fdcc",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a660ac4c-3fdd-4be6-9c2e-79d41ea0fdcc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012894,
              "key": "38e37bef-b2ed-47b2-995d-c2e9edc4f5d2",
              "title": "Lesson Recap Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Kubernetes Fundamentals",
              "instructor_notes": ""
            },
            {
              "id": 1012901,
              "key": "f6ce83fe-28f1-4e34-be00-7b305dc82cb0",
              "title": "ND9990 CDND C03 L04 A13 Lesson Recap V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "m04qACWpxzI",
                "china_cdn_id": "m04qACWpxzI.mp4"
              }
            },
            {
              "id": 1012902,
              "key": "90ef2374-c641-49f0-9f06-869015ad9cff",
              "title": "Course Outline",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/April/5e9247f7_cdnd-c3-l4-outline/cdnd-c3-l4-outline.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/90ef2374-c641-49f0-9f06-869015ad9cff",
              "caption": "What We Covered in This Lesson",
              "alt": "What we Covered",
              "width": 960,
              "height": 540,
              "instructor_notes": null
            },
            {
              "id": 1012903,
              "key": "4047721c-d2ad-4045-8c38-f8ae8e40ffe9",
              "title": "Lesson Recap Text",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "###  Kubernetes\n\n* What is orchestration\n* What is Kubernetes\n* Setting up Kubernetes Cluster\n* Deploying a service to Kubernetes\n* Checking the service through kubectl\n\n### Next Lesson\nIn the next lesson, we’ll be learning how to make our application more robust in Kubernetes.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1012931,
          "key": "8d6d1dc9-56bf-4293-a709-f78f1674e28c",
          "title": "Glossary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8d6d1dc9-56bf-4293-a709-f78f1674e28c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1012906,
              "key": "1905f015-8741-4561-bb24-1e936812c03c",
              "title": "Glossary",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### New Terms in This Lesson  \r\r<br><br>\n\n| Term \t| Description \t|\n|--------------------\t|-----------------------\t|\n| Cluster \t| A group of resources that are connected to act as a single system \t|\n| Horizontal Scaling \t| Handling increased traffic by creating additional replicas so that traffic can be divided across the replicas \t|\n| Kubernetes Service \t| An abstraction of a set of pods and interface for how to interact with the pods \t|\n| Kubernetes Service \t| A set of containers that are deployed together \t|\n| Load Balancing \t| Handling traffic by distributing it across different endpoints \t|\n| Replica \t| A redundant copy of a resource often used for backups or load balancing \t|\n| Consumer \t| An external entity such as a user or program that interfaces with an application \t|\n",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}
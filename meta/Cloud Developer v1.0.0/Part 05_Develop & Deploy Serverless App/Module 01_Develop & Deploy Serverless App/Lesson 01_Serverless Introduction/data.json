{
  "data": {
    "lesson": {
      "id": 858030,
      "key": "e62fb15c-3cb2-42d5-a15d-4000f19333c5",
      "title": "Serverless Introduction",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Introduction to the course, and Introduction to Serverless",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/e62fb15c-3cb2-42d5-a15d-4000f19333c5/858030/1561688808896/Serverless+Introduction+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/e62fb15c-3cb2-42d5-a15d-4000f19333c5/858030/1561688800146/Serverless+Introduction+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 858026,
          "key": "ce83446b-1298-48f2-9b8e-bbe785c5b7f9",
          "title": "Intro to Serverless",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ce83446b-1298-48f2-9b8e-bbe785c5b7f9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857961,
              "key": "a53fd3f0-621e-4b2e-9d69-c8d651aad690",
              "title": "ND9990 L01 A01 Why You Should Learn Serverless",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "J11F7DLLOMw",
                "china_cdn_id": "J11F7DLLOMw.mp4"
              }
            },
            {
              "id": 858869,
              "key": "94208db0-7cc0-4c67-8abe-1fa8f89d8fdf",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### What is \"Serverless\"?\n<ul>\n<li>A buzzword (not a pattern/technology/architecture)</li>\n<li>A spectrum of solutions</li>\n<ul>\n<li>servers are managed by someone else</li>\n<li>allow to scale up and down easily</li>\n<li>pay for what you use (except for storage)</li>\n<li>no administration</li></ul></ul>\n \n### Benefits of Serveless\n<ul>\n<li>Low entry barrier</li>\n<li>Cost efficient</li>\n<li>High-availability and scalability</li></ul>\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 857968,
              "key": "377934c9-d91b-4c29-b7ae-a5103a92e721",
              "title": "ND9990 L01 A02 Course Structure",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "0EU914bB5Z0",
                "china_cdn_id": "0EU914bB5Z0.mp4"
              }
            },
            {
              "id": 970795,
              "key": "1c0972d2-f56f-4480-80ed-7bee1c0ce2ed",
              "title": "Intro graphic",
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/February/5e496fa2_intro/intro.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1c0972d2-f56f-4480-80ed-7bee1c0ce2ed",
              "caption": "",
              "alt": "",
              "width": 960,
              "height": 540,
              "instructor_notes": null
            },
            {
              "id": 970796,
              "key": "8161eeab-dd91-40d7-9b7a-82ff474fbe00",
              "title": "Course Structure",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## What we will cover in this lesson\n<ul>\r<li>What is serverless?</li>\n<li>Function as a Service (FaaS)</li>\n<li>Simple functions and how to connect them to events</li>\n<li>How functions are executed</li>\n<li>Pros and Cons of using FaaS</li>\n</ul>\n\n\n## What are we going to build?\n<ul>\r<li>Image sharing application\n<li>Images and groups\n<li>A number of features\n<ul>\n <li>REST API\n <li>React frontend\n<li>WebSockets\n <li>Authentication\n<li>Scalable</ul>\n<li>Mostly serverless components</ul>\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 858023,
          "key": "f3d73431-85bc-4fad-841c-af3ed13a0e9b",
          "title": "Function as a Service",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f3d73431-85bc-4fad-841c-af3ed13a0e9b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857967,
              "key": "6789867f-3261-49e5-8d51-0546826dea15",
              "title": "ND9990 L01 A03 Serverless Components",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SajGY55NIGA",
                "china_cdn_id": "SajGY55NIGA.mp4"
              }
            },
            {
              "id": 858872,
              "key": "4f9084ec-8d49-4fd6-92d4-9ccfd1fea574",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Serverless Components\n\n<ul>\n<li>__FaaS__ : _Function as a service_: write code in individual functions and deploy them to a platform to be executed</li>\n<li>__Datastores__: Storage of data</li>\n<li>__Messaging__:  Send messages from one application to another</li>\n<li>__Services__: Services that provide functionalities where we don't need to manage servers; i.e. authentication, ML, video processing</li></ul>",
              "instructor_notes": ""
            },
            {
              "id": 857974,
              "key": "f15ce553-1f8f-426b-99a2-1d2c88321826",
              "title": "ND9990 L01 A04 Function As A Service",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wq0Tt8q3pdQ",
                "china_cdn_id": "wq0Tt8q3pdQ.mp4"
              }
            },
            {
              "id": 858874,
              "key": "a77b948e-0a34-4382-aff0-5b242c99b28d",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Function as a Service\n<ul>\n<li>Split application into small functions</li>\n<li>Event driven</li>\n<li>Pay per invocation</li>\n<li>Rest is handled by a cloud provider</li></ul>\n\n### Lambda function vs AWS Lambda\n\nKeep in mind that AWS Lambda is a computing service that runs code in response to events from Amazon Web Services, while a Lambda function is a single function connected to an event source running in AWS Lambda.",
              "instructor_notes": ""
            },
            {
              "id": 857973,
              "key": "b8255097-4b94-4917-a67f-a7d42b04e4fb",
              "title": "ND9990 L01 A05 Implementing A Function",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rqFE1BwONr4",
                "china_cdn_id": "rqFE1BwONr4.mp4"
              }
            },
            {
              "id": 858653,
              "key": "140cc3bf-17cd-4c22-98bf-56726990236f",
              "title": "Lambda parameters",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "140cc3bf-17cd-4c22-98bf-56726990236f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What parameters can we directly configure for an AWS Lambda function?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Number of CPUs",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Amount of RAM",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Function timeout",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "Disk type",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 858015,
              "key": "321dab61-6b17-4bc0-a398-3a4b1abb3799",
              "title": "ND9990 L01 A06 Serverless Is Not A Silver Bullet",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "a3iVPBR77Y0",
                "china_cdn_id": "a3iVPBR77Y0.mp4"
              }
            },
            {
              "id": 858875,
              "key": "fe703165-67d2-46a9-80ea-b5fe3a493e1a",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### AWS Lambda limitations\n<ul>\n<li>At most 3GB of memory per execution</li>\n<li>Functions can run no more that 15 minutes</li>\n<li>Can only write files to `/tmp` folder</li>\n<li>Limited number of concurrent executions </li>\n<li>Event size up to 6 MB</li></ul>\n\nKeep in mind that those limits are subject to change. You can find most recent AWS Lambda limits [here](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 858024,
          "key": "277516e3-1b53-4d54-ae6d-5c7de0b6303e",
          "title": "AWS Lambda",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "277516e3-1b53-4d54-ae6d-5c7de0b6303e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857971,
              "key": "e8def6ea-238b-456b-a024-c4ff3833a1af",
              "title": "ND9990 L01 A07 First Lamda Function (Demo) Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "EuimHOEQBas",
                "china_cdn_id": "EuimHOEQBas.mp4"
              }
            },
            {
              "id": 857964,
              "key": "afe5b15e-4731-49b8-9143-be35dc662802",
              "title": "ND9990 L01 A08 First Lamda Function (Demo) Part 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "6OLrLLJrdMw",
                "china_cdn_id": "6OLrLLJrdMw.mp4"
              }
            },
            {
              "id": 857966,
              "key": "cb958a21-bdc4-4e8f-bce0-19a1922c0da0",
              "title": "ND9990 L01 A09 First Lamda Function (Demo) Part 3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "h3dC0cN-HVo",
                "china_cdn_id": "h3dC0cN-HVo.mp4"
              }
            },
            {
              "id": 858879,
              "key": "3564dec6-157e-4fe4-a0e2-e94cab259597",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Sample code of a function with no parameters:\n```\nexports.handler = async (event) => {\n        console.log('Event: ', event)\n\n        return {\n               result: 'Hello Udacity!'\n       }\n}\n```\n",
              "instructor_notes": ""
            },
            {
              "id": 857978,
              "key": "f6f98c35-20dc-4e23-862e-e658118b998f",
              "title": "ND9990 L01 A10 What Has Just Happened- (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JxQWuO5ZccE",
                "china_cdn_id": "JxQWuO5ZccE.mp4"
              }
            },
            {
              "id": 858884,
              "key": "cc911551-bf30-48bb-864b-5230539e2e11",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### AWS took care of \n<ul>\n<li>Deploying our code</li>\n<li>Autoscaling</li>\n<li>Reliability</li>\n</ul>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 983026,
          "key": "0b977bfc-4610-40c5-93c6-cc35e1cfaeaf",
          "title": "Events with AWS Lambda",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0b977bfc-4610-40c5-93c6-cc35e1cfaeaf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857972,
              "key": "ff3621cd-f3fc-49cf-b7f9-669a4bbb4db5",
              "title": "ND9990 L01 A11 Using Events In AWS Lambda (Demo) Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OauYLIazud4",
                "china_cdn_id": "OauYLIazud4.mp4"
              }
            },
            {
              "id": 857985,
              "key": "357d9c97-aad0-4e46-b463-bc7ae286cca6",
              "title": "ND9990 L01 A12  Using Events In AWS Lambda (Demo) Part 2 (And Part 3 Unclear)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3OhBzoJKSS8",
                "china_cdn_id": "3OhBzoJKSS8.mp4"
              }
            },
            {
              "id": 858885,
              "key": "48ab0a1c-3fb7-484e-a8ec-86d2dbc81fb9",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Sample code of a function with parameters:\n```\nexports.handler = async (event) => {\n\n        console.log('Event: ', event)\n        return {\n               result: `Hello ${event.name} !`\n       }\n}\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 858022,
          "key": "03a5b2ae-6d9f-44ea-a355-e9f3218b7cd4",
          "title": "How FaaS works",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "03a5b2ae-6d9f-44ea-a355-e9f3218b7cd4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857977,
              "key": "0305ac71-509c-4b4e-bffa-fe581c0b4c10",
              "title": "ND9990 L01 A13 How Functions Are Executed (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ccNtkfz3BCo",
                "china_cdn_id": "ccNtkfz3BCo.mp4"
              }
            },
            {
              "id": 858982,
              "key": "f0da2e2f-ba96-4eed-8e71-fc445feaa0e9",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h3>How functions are executed</h3>\nWhen we send a request to execute a Lambda function, AWSLambda creates an environment to run that function. It starts a container for the specific environment and loads the function code into the environment. Then it sends an event to our function.\nThe same process is repeated for all the other requests coming in.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 858021,
          "key": "d1541716-3324-4150-8dd3-47232c759f4c",
          "title": "Invocation types",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d1541716-3324-4150-8dd3-47232c759f4c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857982,
              "key": "a7c67bfc-a03e-402d-aaf6-f0bce3dacf91",
              "title": "ND9990 L01 A15 Invocation Types (Demo)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "u5cLTM5I-o0",
                "china_cdn_id": "u5cLTM5I-o0.mp4"
              }
            },
            {
              "id": 858989,
              "key": "376ff30b-3054-498a-95d7-176716eaa25a",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In this demo we show how to invoke a function using AWS CLI.<br>\nTo recap, there are 3 invocation types:\n<ul>\n<li>Request/response\n<li>Asynchronous invocation\n<li>Using AWS CLI</li></ul>\n",
              "instructor_notes": ""
            },
            {
              "id": 857994,
              "key": "8cb6b77b-1eec-4d90-a5d7-1cebbcad9d07",
              "title": "ND9990 L01 A16 Errors Handling (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "C96FEBGcDf4",
                "china_cdn_id": "C96FEBGcDf4.mp4"
              }
            },
            {
              "id": 858991,
              "key": "c5a5a3e5-fad6-49f4-9eb0-5e9537e02e0b",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Errors are handled differently, depending on how we execute our function.\n\nWhen we use a **Request/response** method:\nIf there's an error in the function, then it will return immediately to the caller, which can process the error from the Lambda function.\n\nWhen we use an **Async** method:\nInstead of returning an error to the user, AWSLambda will return HTTP 202 code to the user and it will store a request into an internal queue. Additionally, it will try to call the Lambda function up to 3 times. If all of those times result into an error, then it will store the event into a \"dead-letter queue\", which stores all the events that the Lambda function failed to process.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 983028,
          "key": "83f436dd-5ac1-46f6-bc81-44de668ce51f",
          "title": "JavaScript Callbacks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "83f436dd-5ac1-46f6-bc81-44de668ce51f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857980,
              "key": "56c8446b-ab26-4fdd-9bda-2bca513f5838",
              "title": "ND9990 L01 A17 JavaScript Callbacks",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "E56AWzNCj30",
                "china_cdn_id": "E56AWzNCj30.mp4"
              }
            },
            {
              "id": 858652,
              "key": "8bb1717e-8500-4ad0-bc5f-23f88d8c04a9",
              "title": "Dead Letter Queues",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8bb1717e-8500-4ad0-bc5f-23f88d8c04a9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When is an event sent to a Lambda function added to a Dead Letter Queue?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "When a synchronous invocation fails",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Every time an asynchronous invocation fails",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "If an asynchronous invocation fails after three unsuccessful attempts",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "All processed events are added to a Dead Letter Queue",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 858016,
              "key": "905f2913-a8c1-4e21-8d8c-d04b87becb47",
              "title": "ND9990 L01 A18 JavaScript Promises And Async-Await",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YpA0ZI8nj9o",
                "china_cdn_id": "YpA0ZI8nj9o.mp4"
              }
            },
            {
              "id": 983027,
              "key": "cd37c784-2e11-42e7-9dbe-b6eb5735726a",
              "title": "Async/Await",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Check out this blog about the history of asynchronous code in JavaScript [here](https://developer.okta.com/blog/2019/01/16/history-and-future-of-async-javascript).",
              "instructor_notes": ""
            },
            {
              "id": 857975,
              "key": "8e9e618f-4740-42a6-a4c3-6f1030f4f6b6",
              "title": "ND9990 L01 A19 Solution 3 - Async-Await In JavaScript (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "AEv68tnflcQ",
                "china_cdn_id": "AEv68tnflcQ.mp4"
              }
            },
            {
              "id": 859008,
              "key": "b73646e9-1e71-4386-8fe4-412107b20db3",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Async/await can only be used in an asynchronous function.\nAn asynchronous function is identified by the **async** prefix.\n\n____________\n\nIf you want to know more about \"Javascript Promises\", check out Udacity's [Javascript Promises course](https://www.udacity.com/course/javascript-promises--ud898)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 858028,
          "key": "79d20f5d-ce18-430c-9dba-2b8fa16bd0dc",
          "title": "Platform events",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79d20f5d-ce18-430c-9dba-2b8fa16bd0dc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857975,
              "key": "8e9e618f-4740-42a6-a4c3-6f1030f4f6b6",
              "title": "ND9990 L01 A19 Solution 3 - Async-Await In JavaScript (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "AEv68tnflcQ",
                "china_cdn_id": "AEv68tnflcQ.mp4"
              }
            },
            {
              "id": 859008,
              "key": "b73646e9-1e71-4386-8fe4-412107b20db3",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Async/await can only be used in an asynchronous function.\nAn asynchronous function is identified by the **async** prefix.\n\n____________\n\nIf you want to know more about \"Javascript Promises\", check out Udacity's [Javascript Promises course](https://www.udacity.com/course/javascript-promises--ud898)",
              "instructor_notes": ""
            },
            {
              "id": 857990,
              "key": "2d7dcff5-5447-4e89-b29b-1a287489e61e",
              "title": "ND9990 L01 A20 Serverless Chaos Monkey (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "V7NGI3b_WoA",
                "china_cdn_id": "V7NGI3b_WoA.mp4"
              }
            },
            {
              "id": 859009,
              "key": "39e2a9be-47ff-4dab-8aca-75d3200ad4be",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h3>Solution Outline</h3>\nTo run our function we use a service called CloudWatch, which periodically generates events.\nThose events are sent to the Lambda function, and on each event, the Lambda function gets a list of instances from the environment and will randomly terminate one of them.\n(see below the summary diagram)",
              "instructor_notes": ""
            },
            {
              "id": 859010,
              "key": "2c5d6877-878a-4b42-9a57-cf771960068a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf94656_screen-shot-2019-06-06-at-12.58.25-pm/screen-shot-2019-06-06-at-12.58.25-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/2c5d6877-878a-4b42-9a57-cf771960068a",
              "caption": "",
              "alt": "",
              "width": 1142,
              "height": 386,
              "instructor_notes": null
            },
            {
              "id": 858008,
              "key": "dfe5758e-3bbc-4553-80d4-6c106dccce32",
              "title": "ND9990 L01 A21 Third Party Dependencies (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g-ynoz0k6-g",
                "china_cdn_id": "g-ynoz0k6-g.mp4"
              }
            },
            {
              "id": 857991,
              "key": "6c352f8b-b383-42db-88fd-c661364021ea",
              "title": "ND9990 L01 A23 Demo - Chaos Monkey Part 2 V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OkRrh_w1PB4",
                "china_cdn_id": "OkRrh_w1PB4.mp4"
              }
            },
            {
              "id": 966247,
              "key": "9c6ec498-da57-4792-9bb9-c46e5f4b31d3",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "You can find the code for this demo in the course repo: https://github.com/udacity/cloud-developer/tree/master/course-04/exercises/c4-demos-master/04-chaos-monkey\n\nIn the `04-chaos-monkey` directory install the dependencies:\n```\nnpm install\n```\n\nand then zip the folder so that it can be uploaded.\n\n```\nzip -r chaos-monkey.zip .\n```",
              "instructor_notes": ""
            },
            {
              "id": 858007,
              "key": "9b25cadc-0106-40e0-86e2-1d50c9a23a03",
              "title": "ND9990 L01 A24 Demo - Chaos Monkey Part 3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4FLCK7W813Y",
                "china_cdn_id": "4FLCK7W813Y.mp4"
              }
            }
          ]
        },
        {
          "id": 858027,
          "key": "d6782ce4-cd31-4236-b001-0f7005a4296c",
          "title": "Additional Parameters",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d6782ce4-cd31-4236-b001-0f7005a4296c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 858011,
              "key": "e59c00b3-3f9e-4d78-9dd7-37905df54b63",
              "title": "ND9990 L01 A25 Additional Parameters",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tEfG-Rbz0rI",
                "china_cdn_id": "tEfG-Rbz0rI.mp4"
              }
            },
            {
              "id": 859030,
              "key": "a80ba46d-60a3-4398-9a54-3fe53b66a315",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf957ab_screen-shot-2019-06-06-at-2.12.46-pm/screen-shot-2019-06-06-at-2.12.46-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a80ba46d-60a3-4398-9a54-3fe53b66a315",
              "caption": "",
              "alt": "",
              "width": 1296,
              "height": 632,
              "instructor_notes": null
            },
            {
              "id": 858651,
              "key": "cf453f4e-bc3b-4819-9f8e-acad3ec4811d",
              "title": "Lambda parameters",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cf453f4e-bc3b-4819-9f8e-acad3ec4811d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the following Lambda function parameters with their purpose."
                },
                "concepts_label": "Purpose",
                "answers_label": "Parameter",
                "concepts": [
                  {
                    "text": "Can be used to return a result in older environments",
                    "correct_answer": {
                      "id": "a1581869222012",
                      "text": "callback"
                    }
                  },
                  {
                    "text": "Information about a function's environment",
                    "correct_answer": {
                      "id": "a1581869223009",
                      "text": "context"
                    }
                  },
                  {
                    "text": "The object passed to a function to process",
                    "correct_answer": {
                      "id": "a1581869223841",
                      "text": "event"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1581869223009",
                    "text": "context"
                  },
                  {
                    "id": "a1581869223841",
                    "text": "event"
                  },
                  {
                    "id": "a1581869222012",
                    "text": "callback"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 858029,
          "key": "03c486d8-11e8-4802-a2f2-4a946ad4b940",
          "title": "When to use serverless",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "03c486d8-11e8-4802-a2f2-4a946ad4b940",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857988,
              "key": "1f943041-d025-4535-bfd7-92467fd73178",
              "title": "ND9990 L01 A26 Lambda Cost (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "GcwsmHclqWs",
                "china_cdn_id": "GcwsmHclqWs.mp4"
              }
            },
            {
              "id": 859031,
              "key": "b2e23af3-8aee-4f06-99ce-5dc74ef776bf",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Check how much you could save going serverless: [http://servers.lol/](http://servers.lol/)",
              "instructor_notes": ""
            },
            {
              "id": 857995,
              "key": "a28df143-a34f-4186-a89f-e79767f6c053",
              "title": "ND9990 L01 A27 Serverless Pros And Cons (Slides)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Aijgl_KrIHY",
                "china_cdn_id": "Aijgl_KrIHY.mp4"
              }
            },
            {
              "id": 859032,
              "key": "b1d95300-644f-41a8-8c82-209095ba2b37",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf959b3_screen-shot-2019-06-06-at-2.21.16-pm/screen-shot-2019-06-06-at-2.21.16-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b1d95300-644f-41a8-8c82-209095ba2b37",
              "caption": "",
              "alt": "",
              "width": 1284,
              "height": 612,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 858025,
          "key": "bf9a01bc-cb4a-42ed-8076-f5b069bea488",
          "title": "Exercise",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "bf9a01bc-cb4a-42ed-8076-f5b069bea488",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 857998,
              "key": "faba9cd0-b623-4623-a206-dd0b3c1135c1",
              "title": "ND9990 L01 A28 Environment Variables",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Z2-HFjKENx8",
                "china_cdn_id": "Z2-HFjKENx8.mp4"
              }
            },
            {
              "id": 858568,
              "key": "5be682be-8953-4472-8ce4-134c9822215c",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Implementation\n\nIn this exercise, you will have to write a Lambda function that sends an HTTP request every minute and records metrics for this request.\n\nYou would have to generate two data points:\n\n* If a request was successful or not\n* Time it took to execute a request.\n\nTo generate a single data point, you need to use the following code:\n\n```ts\nawait cloudwatch.putMetricData({\n  MetricData: [ // A list of data points to send\n    {\n      MetricName: 'Success', // Name of a metric\n      Dimensions: [ // A list of key-value pairs that can be used to filter metrics from CloudWatch\n        {\n          Name: 'ServiceName',\n          Value: serviceName\n        }\n      ],\n      Unit: 'Count', // Unit of a metric\n      Value: value // Value of a metric to store\n    }\n  ],\n  Namespace: 'Udacity/Serveless' // An isolated group of metrics\n}).promise()\n```\n\nTo call a function every minute, you would need to use CloudWatch Events as an event source for your Lambda function just as we did this in this lesson.\n\n## How to build the project\n\nYou can find the starter code here: https://github.com/udacity/cloud-developer/tree/master/course-04/exercises/lesson-1/starter-code\n\nNavigate to the `lesson-1/starter-code` folder and install dependencies by running  the following command:\n\n```\nnpm install\n```\n\nOnce the dependencies are installed, you can build a `.zip` package that can be deployed to AWS Lambda:\n\n```\nnpm run package\n```\n\nThis should create a file called `http-metrics.zip`.\n\nYou would also need to set correct IAM permissions for a Lambda function to send metrics to AWS CloudWatch. You can copy an IAM policy from the `iam-policy.json` file in this project.\n\n## Deployment\n\nYou need to deploy a `.zip` package just we did it in this lesson.\n\nTo set environment variables for a function, you need to scroll to the \"Environment variables\" section in the AWS Lambda interface and set your variables like this:",
              "instructor_notes": ""
            },
            {
              "id": 858618,
              "key": "47ff3eee-9bf5-4a52-829a-b4b5c0eacb82",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf418fd_cloud-dev-c4-lesson1-1-env-variables/cloud-dev-c4-lesson1-1-env-variables.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/47ff3eee-9bf5-4a52-829a-b4b5c0eacb82",
              "caption": "",
              "alt": "",
              "width": 3038,
              "height": 614,
              "instructor_notes": null
            },
            {
              "id": 858603,
              "key": "4b6dad2c-8c6f-482e-ba85-4921f5d41ac3",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n## Expected result\n\nTo check if your function is correctly generating metrics go to the `CloudWatch` service in AWS, then go to the metrics section:",
              "instructor_notes": ""
            },
            {
              "id": 858619,
              "key": "d2dccccc-1ab5-49f1-9ff6-7d625038990c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf418fe_cloud-dev-c4-lesson1-2-metrics-panel/cloud-dev-c4-lesson1-2-metrics-panel.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d2dccccc-1ab5-49f1-9ff6-7d625038990c",
              "caption": "",
              "alt": "",
              "width": 504,
              "height": 922,
              "instructor_notes": null
            },
            {
              "id": 858604,
              "key": "bc642916-f2db-4e94-b44f-bdb572af5964",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If your function is generating metrics, you should be able to see a new metrics namespace:",
              "instructor_notes": ""
            },
            {
              "id": 858620,
              "key": "ced3ff6f-03eb-4f25-994c-6ea924572480",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf418ff_cloud-dev-c4-lesson1-3-metrics-namespace/cloud-dev-c4-lesson1-3-metrics-namespace.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ced3ff6f-03eb-4f25-994c-6ea924572480",
              "caption": "",
              "alt": "",
              "width": 5416,
              "height": 1442,
              "instructor_notes": null
            },
            {
              "id": 858009,
              "key": "cf1421a9-8f78-4e1a-89af-4cf713d7a4a3",
              "title": "ND9990 L01 A29 Uptime Monitoring Demo Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SYtC3Gijxcw",
                "china_cdn_id": "SYtC3Gijxcw.mp4"
              }
            },
            {
              "id": 858012,
              "key": "ee580109-b844-4f35-b0dd-0c04a364f740",
              "title": "ND9990 L01 A30 Uptime Monitoring Demo Part 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "D1jr8gMYzH0",
                "china_cdn_id": "D1jr8gMYzH0.mp4"
              }
            },
            {
              "id": 858006,
              "key": "84a28aec-e046-40ff-8956-c80709730216",
              "title": "ND9990 L01 A31 Uptime Monitoring Demo Part 3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7UYQxUBvG90",
                "china_cdn_id": "7UYQxUBvG90.mp4"
              }
            }
          ]
        },
        {
          "id": 983025,
          "key": "8b65ac7a-83a0-4d7d-a7d6-6f113aae0a25",
          "title": "Exercise Solution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8b65ac7a-83a0-4d7d-a7d6-6f113aae0a25",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 858003,
              "key": "e6e7d7cb-9b07-4c80-9cd8-f74dac5b8c85",
              "title": "ND9990 L01 A32 Exercise Solution Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "otaLIh5GYG8",
                "china_cdn_id": "otaLIh5GYG8.mp4"
              }
            }
          ]
        },
        {
          "id": 970797,
          "key": "5ba1ea67-4821-4290-a56c-3cb2cb0a1253",
          "title": "Summary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5ba1ea67-4821-4290-a56c-3cb2cb0a1253",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 858001,
              "key": "d92b0f4c-b816-41fd-b0c1-8b0025f43f43",
              "title": "ND9990 L01 A33 Summary - What We Have Covered",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "asNFblalRF0",
                "china_cdn_id": "asNFblalRF0.mp4"
              }
            },
            {
              "id": 859042,
              "key": "813fd216-bd57-41c9-b2c7-160f7a09d7f2",
              "title": "Untitled",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### What we have covered\n<ul>\n<li> What is serverless</li>\n<li> Function as a Service (FaaS)</li>\n<li>Implemented simple functions and connected them to events</li>\n<li>How functions are executed</li>\n<li>Pros and Cons of using FaaS</li></ul>\n\n\n### What's Next?\n<ul>\n<li>Connect Lambda functions to REST API</li>\n<li>Use DynamoDB for data storage</li>\n<li>Implement React Frontend</li></ul>",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}
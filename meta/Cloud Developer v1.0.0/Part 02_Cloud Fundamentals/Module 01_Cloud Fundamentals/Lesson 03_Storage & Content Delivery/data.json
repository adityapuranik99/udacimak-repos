{
  "data": {
    "lesson": {
      "id": 850113,
      "key": "f22b06c5-6747-4406-9aaf-c479be4a678a",
      "title": "Storage & Content Delivery",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn why we need storage and content delivery in the cloud.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/f22b06c5-6747-4406-9aaf-c479be4a678a/850113/1561693495522/Storage+%26+Content+Delivery+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/f22b06c5-6747-4406-9aaf-c479be4a678a/850113/1561693492287/Storage+%26+Content+Delivery+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 850120,
          "key": "04c19750-ef50-4afc-98bb-c356792922b2",
          "title": "Lesson Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "04c19750-ef50-4afc-98bb-c356792922b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850530,
              "key": "a6ad5ae7-ce73-45f2-8507-1b8976fccee2",
              "title": "CloudEng Course1 Lesson3 Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g8b5kgxzUfQ",
                "china_cdn_id": "g8b5kgxzUfQ.mp4"
              }
            }
          ]
        },
        {
          "id": 850121,
          "key": "02130ae9-0f52-4873-a043-bf76a8cbb912",
          "title": "Why do we need storage in the cloud?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "02130ae9-0f52-4873-a043-bf76a8cbb912",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850148,
              "key": "34670357-5fe1-4901-8cd1-5fa1fc174874",
              "title": "CloudEng Course1 Lesson3 WhyWeNeedStorage V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zwepSeXsutA",
                "china_cdn_id": "zwepSeXsutA.mp4"
              }
            },
            {
              "id": 851085,
              "key": "fc448f10-f79f-405c-9e42-33fc03243d44",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Storage in the Cloud</h1>\n\nStorage and database services in the cloud provide a place for companies to collect, store, and analyze the data they've collected over the years at a massive scale.  \n\n<h1>Storage & Database Services</h1>\n<ul>\n<li>Amazon Simple Storage Service (Amazon S3) </li>\n<li>Amazon Simple Storage Service (Amazon S3) Glacier</li>\n<li>DynamoDB</li>\n<li>Relational Database Service (RDS)</li>\n<li>Redshift</li>\n<li>ElastiCache</li>\n<li>Neptune</li>\n<li>Amazon DocumentDB</li>\n</ul>\n\n",
              "instructor_notes": ""
            },
            {
              "id": 851087,
              "key": "7f54b96b-93c0-40f5-9d73-180cb8006e22",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7f54b96b-93c0-40f5-9d73-180cb8006e22",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each term with its definition."
                },
                "concepts_label": "Term",
                "answers_label": "Definition",
                "concepts": [
                  {
                    "text": "Durability",
                    "correct_answer": {
                      "id": "a1558805424630",
                      "text": "guarantees that you will not lose the data that you upload to the cloud"
                    }
                  },
                  {
                    "text": "Availability",
                    "correct_answer": {
                      "id": "a1558805583563",
                      "text": "addresses how quickly you can access your data"
                    }
                  },
                  {
                    "text": "Scalability",
                    "correct_answer": {
                      "id": "a1558805584570",
                      "text": "allows applications running in your environment to always meet demand seamlessly"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1558805583563",
                    "text": "addresses how quickly you can access your data"
                  },
                  {
                    "id": "a1558805424630",
                    "text": "guarantees that you will not lose the data that you upload to the cloud"
                  },
                  {
                    "id": "a1558805584570",
                    "text": "allows applications running in your environment to always meet demand seamlessly"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 850122,
          "key": "828b7524-7c6b-4ba6-9cfe-9c23deaaa76d",
          "title": "S3 & Glacier",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "828b7524-7c6b-4ba6-9cfe-9c23deaaa76d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850142,
              "key": "c487ac4d-8cf4-4f14-8dd3-c8ce1867139b",
              "title": "CloudEng Course1 Lesson3 S3Glacier(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "dGhnH2CPSr0",
                "china_cdn_id": "dGhnH2CPSr0.mp4"
              }
            },
            {
              "id": 851086,
              "key": "88c274e8-d903-4bd0-a3d7-fbedb9080d82",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>S3 & S3 Glacier</h1>\nAmazon Simple Storage Service (or S3) is an object storage system in the cloud. \n\n<h1>Storage Classes</h1>\nS3 offers several <a href=\"https://aws.amazon.com/s3/storage-classes\">storage classes</a>, which are different data access levels for your data at certain price points. \n\n<ul>\n<li>S3 Standard</li>\n<li>S3 Glacier</li>\n<li>S3 Glacier Deep Archive</li>\n<li>S3 Intelligent-Tiering</li>\n<li>S3 Standard Infrequent Access </li>\n<li>S3 One Zone-Infrequent Access</li>\n</ul>\n\n<h1>Tips</h1>\n<ul>\n<li>S3 is found under the Storage section on the AWS Management Console.</li>\n<li>A single object can be up to 5 terabytes in size.</li>\n<li>You can enable Multi-Factor Authentication (MFA) Delete on an S3 bucket to prevent accidental deletions.</li>\n<li><strong>S3 Acceleration</strong> can be used to enable fast, easy, and secure transfers of files over long distances between your data source and your S3 bucket.\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851088,
              "key": "129ea991-9822-4343-8928-a17470931dd6",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "129ea991-9822-4343-8928-a17470931dd6",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which S3 storage class is best for archiving?",
                "answers": [
                  {
                    "id": "a1558806806397",
                    "text": "S3 Standard",
                    "is_correct": false
                  },
                  {
                    "id": "a1558806823996",
                    "text": "S3 Intelligent-Tiering S3 ",
                    "is_correct": false
                  },
                  {
                    "id": "a1558806825104",
                    "text": "S3 Glacier",
                    "is_correct": true
                  },
                  {
                    "id": "a1558806853887",
                    "text": "S3 Standard Infrequent Access",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859382,
              "key": "d865e640-cf14-4ee0-a474-946f7d935a42",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon S3](https://aws.amazon.com/s3/)\n* [Amazon S3 Glacier](https://aws.amazon.com/glacier/)\n* [What is Amazon S3 Glacier](https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html)\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850143,
          "key": "5bb4aeb7-ff78-4731-9e3a-0d7b83d946ce",
          "title": "Demo - S3 & Glacier ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5bb4aeb7-ff78-4731-9e3a-0d7b83d946ce",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850146,
              "key": "bdd46606-9733-496c-900a-6ea85c06c44d",
              "title": "CloudEng Course1 Lesson3 S3Glacier(PART TWO) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4J2eJMy6nCw",
                "china_cdn_id": "4J2eJMy6nCw.mp4"
              }
            }
          ]
        },
        {
          "id": 850123,
          "key": "b363fe0c-4b9e-4774-862a-f8d3b58ab9a1",
          "title": "DynamoDB",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b363fe0c-4b9e-4774-862a-f8d3b58ab9a1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850135,
              "key": "39121794-80b6-48f2-861f-9f3186ba5838",
              "title": "CloudEng Course1 Lesson3 DynamoDB(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_iB8YU6FpTA",
                "china_cdn_id": "_iB8YU6FpTA.mp4"
              }
            },
            {
              "id": 851089,
              "key": "4132fa5f-49e8-4d60-9296-3ae34de9d3e6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>DynamoDB</h1>\n\nDynamoDB is a NoSQL document database service that is fully managed. Unlike traditional databases, NoSQL databases, are schema-less. Schema-less simply means that the database doesn't contain a fixed (or rigid) data structure.\n\n<h1>Tips</h1>\n<ul>\n<li>DynamoDB is found under the Database section on the AWS Management Console.</li>\n<li>DynamoDB can handle more than 10 trillion requests per day.</li>\n<li>DynamoDB is serverless as there are no servers to provision, patch, or manage.</li>\n<li>DynamoDB supports key-value and document data models.</li>\n<li>DynamoDB synchronously replicates data across three AZs in an AWS Region.</li>\n<li>DynamoDB supports GET/PUT operations using a primary key.</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851090,
              "key": "fe35c9e5-0ab7-4746-a0b4-5b59edfaa9b1",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fe35c9e5-0ab7-4746-a0b4-5b59edfaa9b1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How is data stored in a DynamoDB table?",
                "answers": [
                  {
                    "id": "a1558807726031",
                    "text": "XML",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807782514",
                    "text": "Plain Text",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807784796",
                    "text": "Encrypted text",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807785704",
                    "text": "JSON",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 851091,
              "key": "e732887f-e551-446f-897c-35f21bc4294c",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e732887f-e551-446f-897c-35f21bc4294c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In the shared responsibility model, when working with DynamoDB, what is NOT your responsibility? Pick two.",
                "answers": [
                  {
                    "id": "a1558808087866",
                    "text": "Patch or upgrade the database",
                    "is_correct": true
                  },
                  {
                    "id": "a1558808144123",
                    "text": "Provision or manage servers",
                    "is_correct": true
                  },
                  {
                    "id": "a1558808149067",
                    "text": "Encrypt data at rest",
                    "is_correct": false
                  },
                  {
                    "id": "a1558808151695",
                    "text": "Add or manage an index",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859383,
              "key": "08ce6723-9d4a-48bc-810a-0bafb362573a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon DynamoDB Overview](https://aws.amazon.com/dynamodb/)\n* [What is Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850136,
          "key": "847fabba-6236-45df-96e9-79c288f545d6",
          "title": "Demo - DynamoDB ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "847fabba-6236-45df-96e9-79c288f545d6",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850137,
              "key": "69c73eb8-ab71-48e9-86da-916e1e730290",
              "title": "CloudEng Course1 Lesson3 DynamoDB(PART TWO) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Dxmd3PS4Q6s",
                "china_cdn_id": "Dxmd3PS4Q6s.mp4"
              }
            }
          ]
        },
        {
          "id": 850124,
          "key": "094b68b0-5097-4452-83c2-31ff26fdd6c4",
          "title": "Lab - DynamoDB",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "094b68b0-5097-4452-83c2-31ff26fdd6c4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 851481,
              "key": "de7f4393-bcde-49cc-81ef-316769286ffc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# DynamoDB\n---\nIn this hands-on exercise, you will create a NoSQL database in the cloud. \n\n## Prerequisites:\n* AWS Account\n\n## Topics Covered:\nBy the end of this lab, you will be able to:\n* Create a table\n* Add data to a table\n* Query data in a table\n\n## Steps:\n1. **Access the DynamoDB service from AWS Management Console**\n    * On the AWS Management Console page, type \"dynamo\" in the `Find Services` box and then select `DynamoDB`.\n    * On the DynamoDB Console, click `Create table`.\n    * Enter `Course` as the `Table name`.\n    * Enter `Name` in for the `Partition key` and ensure `String` is selected.\n***Note:*** The partition key spreads data against partitions for scalability. \n    * Keep the remainder of the defaults, and click the `Create` button.\n2. **Add Data to the Table**\n    * Once the table is created, click on the `Items` tab.\n    * Click `Create item`.\n        * In the data entry window, type the following:\n            * For name, enter, `Course 1` and click `Save`\n            * Click the `+`icon to add additional fields:\n                * Select `Insert`\n                * Select `String`\n                * For the field name, enter `Teacher`\n                * For the value, enter `Kesha Williams`\n                * Click `Save`\n    * Follow the same process to add 5 more documents.\n3. **Query Data in a Table**\n    * In the dropdown that contains `Scan`, change it to `Query`.\n    * Where it says `Enter value`, in the row next to the `name` Partition key, enter `Course 1` and click `Start Search`.\n    * You should see your search results appear in the window.\n4. **Cleanup and delete resources**\n    * To clean up the resources to avoid recurring charges, ensure the table name is selected.\n    * Click on the `Delete table` button.\n    * Ensure `Delete all CloudWatch alarms for this table` is selected and click `Delete`.\n<br/>",
              "instructor_notes": ""
            },
            {
              "id": 859384,
              "key": "402d7898-3c44-42da-9dbb-ad789160604f",
              "title": "Create a NoSQL database in the cloud using DynamoDB",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "402d7898-3c44-42da-9dbb-ad789160604f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Access the DynamoDB service from AWS Management Console",
                "Add Data to the Table",
                "Query Data in a Table",
                "Cleanup and delete resources"
              ],
              "positive_feedback": "Excellent!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850125,
          "key": "c198aad1-83e4-4409-b00f-eccaeca23833",
          "title": "Relational Database Service (RDS)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c198aad1-83e4-4409-b00f-eccaeca23833",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850138,
              "key": "d35b98eb-86a7-4db5-8948-15f0b9cfc8ca",
              "title": "CloudEng Course1 Lesson3 RDS(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fQjCOHCUw5I",
                "china_cdn_id": "fQjCOHCUw5I.mp4"
              }
            },
            {
              "id": 851092,
              "key": "2476b46b-f725-4778-ae23-ea1eaa48e8d7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Relational Database Service (RDS)</h1>\n\nRDS (or Relational Database Service) is a service that aids in the administration and management of databases. RDS assists with database administrative tasks that include upgrades, patching, installs, backups, monitoring, performance checks, security, etc. \n\n<h1>Database Engine Support</h1>\n<ul>\n<li>Oracle</li>\n<li>PostgreSQL</li>\n<li>MySQL</li>\n<li>MariaDB</li>\n<li>SQL Server</li>\n</ul>\n\n<h1>Features</h1>\n<ul>\n<li>failover</li>\n<li>backups</li>\n<li>restore</li>\n<li>encryption</li>\n<li>security</li>\n<li>monitoring</li>\n<li>data replication</li>\n<li>scalability</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851093,
              "key": "6de62ab4-1926-4cd1-a694-8437faa4e4c3",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6de62ab4-1926-4cd1-a694-8437faa4e4c3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which database engines are supported by RDS? Pick three.",
                "answers": [
                  {
                    "id": "a1558809710482",
                    "text": "MySQL",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809730438",
                    "text": "MongoDB",
                    "is_correct": false
                  },
                  {
                    "id": "a1558809731620",
                    "text": "Aurora",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809732500",
                    "text": "Oracle",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809742317",
                    "text": "IBM DB2",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 851094,
              "key": "a1049698-b95b-4943-8581-11199d41d3a0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a1049698-b95b-4943-8581-11199d41d3a0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What doesn't RDS help with?",
                "answers": [
                  {
                    "id": "a1558810303349",
                    "text": "Accessing your database via secure shell (SSH)",
                    "is_correct": true
                  },
                  {
                    "id": "a1558810347543",
                    "text": "Upgrading your database",
                    "is_correct": false
                  },
                  {
                    "id": "a1558810348506",
                    "text": "Applying patches to your database",
                    "is_correct": false
                  },
                  {
                    "id": "a1558810349241",
                    "text": "Taking database backups",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859385,
              "key": "f14425b4-f57c-4d27-a99a-faa5dd4e0f80",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [What Is A Relational Database](https://aws.amazon.com/relational-database/)\n* [Amazon Relational Database Service](https://aws.amazon.com/rds/)\n* [AWS Product Databases using Relational Databases](https://aws.amazon.com/products/databases/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850139,
          "key": "54f6683a-676d-422c-bfd7-221bf9897bb7",
          "title": "Demo - Relational Database Service (RDS) ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "54f6683a-676d-422c-bfd7-221bf9897bb7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850140,
              "key": "247df781-eeec-4723-9dfa-e27725335a9a",
              "title": "CloudEng Course1 Lesson3 RDS(PART TWO) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "MvenEn3HB3s",
                "china_cdn_id": "MvenEn3HB3s.mp4"
              }
            }
          ]
        },
        {
          "id": 850126,
          "key": "4ee3f40e-1d86-404a-9f66-fa50dc6975fa",
          "title": "RedShift",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4ee3f40e-1d86-404a-9f66-fa50dc6975fa",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850141,
              "key": "257e2081-39d7-48b1-baeb-50c22c359e48",
              "title": "CloudEng Course1 Lesson3 Redshift V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rNXWXR_3jRo",
                "china_cdn_id": "rNXWXR_3jRo.mp4"
              }
            },
            {
              "id": 851095,
              "key": "e21245c6-d980-4c63-b893-dc1c46ca0603",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Redshift</h1>\n\nRedshift is a cloud data warehousing service to help companies manage big data. Redshift allows you to run fast queries against your data using SQL, ETL, and BI tools. Redshift stores data in a column format to aid in fast querying.\n\n<h1>Tips</h1>\n<ul>\n<li>Redshift can be found under the Database section on the AWS Management Console.</li>\n<li>Redshift delivers great performance by using machine learning.</li>\n<li>Redshift Spectrum is a feature that enables you to run queries against data in Amazon S3.</li>\n<li>Redshift encrypts and keeps your data secure in transit and at rest.</li>\n<li>Redshift clusters can be isolated using Amazon Virtual Private Cloud (VPC).</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851096,
              "key": "c7700bbe-38e0-4f8b-a64b-0747d2c86891",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c7700bbe-38e0-4f8b-a64b-0747d2c86891",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What should a data warehouse, like Redshift, NOT be used for?",
                "answers": [
                  {
                    "id": "a1558811861727",
                    "text": "data analysis",
                    "is_correct": false
                  },
                  {
                    "id": "a1558811883774",
                    "text": "storing large quantities of historical data",
                    "is_correct": false
                  },
                  {
                    "id": "a1558811884545",
                    "text": "processing day-to-day transactions",
                    "is_correct": true
                  },
                  {
                    "id": "a1558811885265",
                    "text": "performing complex queries across all the data ",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859386,
              "key": "2bdfb84f-d845-4fe9-b27a-0dc8eecb34e9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [What Is Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/mgmt/welcome.html)\n* [Amazon Redshift Overview](https://aws.amazon.com/redshift/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850127,
          "key": "69c74230-4c20-4834-90a1-1295971d5bb6",
          "title": "Lab - RDS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "69c74230-4c20-4834-90a1-1295971d5bb6",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 851483,
              "key": "f991b907-fce5-4e4d-8ce4-3f070a5c8088",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Relational Database Service (RDS)\n---\nIn this hands-on exercise, you will create a MySQL database instance using RDS.\n\n## Prerequisites:\n* AWS Account\n\n## Topics Covered:\nBy the end of this lab, you will be able to:\n* Launch a MySQL database\n\n## Steps:\n1. **Launch MySQL Database**\n    * On the AWS Management Console page, type `rds` in the `Find Services` box and then select `RDS`.\n    * On the left-hand side, click `Databases`.\n    * Click `Create database`.\n    * Under engines option, select `MySQL` and click the `Next` button\n    * Under `Instance specifications`, leave the defaults.\n    * Under the `Settings` section:\n        * Enter a name for the instance under `DB instance identifier`\n        \n    Note: This will not be the database name.\n    * Enter a `Master username`\n    * Enter a `Master password` and confirm the password.\n    * Click `Next`\n    * For `Virtual Private Cloud (VPC)`, select `Create new VPC`.\n    * Ensure `Create new DB Subnet Group` is selected. \n    * Leave the defaults for `Subnet group`, `Public accessibility`, `Availability zone`, and `VPC security groups`.\n    * Under `Database options`, enter a `Database name` and leave the rest as defaults.\n    * Under `Deletion protection`, uncheck `Enable deletion protection`.\n***Important:*** In a real production scenario, you would leave this option checked.\n    * Click Create database`.\n2. **View Instance Details**\n    * Once your database is created, open it by clicking on `View DB Instance details`.\n    * Make sure the `DB instance status` shows `available`.\n    * Scroll through and observe how the instance is configured.\n3. **Delete Database Instance**\nClean up the resources to avoid recurring charges.\n    * From the RDS Dashboard homepage, select `Databases` from the left-hand navigation pane.\n    * Select your newly created database by clicking on the name radio button next to the name.\n    * From the `Actions` menu, select `Delete`.\n    * In the confirmation popup:\n        * Uncheck `Create final snapshot`\n        * Select `I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available.`\n        * Enter the requested confirmation for deletion.\n        * Click the `Delete` button\n",
              "instructor_notes": ""
            },
            {
              "id": 859387,
              "key": "3663426d-d401-45c6-a6c8-d132aa9c431e",
              "title": "Create a MySQL database instance using RDS",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3663426d-d401-45c6-a6c8-d132aa9c431e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Launch MySQL Database",
                "View Your Instance Details",
                "Delete Database Instance"
              ],
              "positive_feedback": "Congratulations. You did Great!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850128,
          "key": "28362f85-cd90-434e-89c0-bb0c8afdabbd",
          "title": "Why do we need content delivery in the cloud?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "28362f85-cd90-434e-89c0-bb0c8afdabbd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850147,
              "key": "6c0767f0-1f7f-4a04-9cb2-c65120cbf19a",
              "title": "CloudEng Course1 Lesson3 WhyWeNeedContent V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "iyRVjN6xg0w",
                "china_cdn_id": "iyRVjN6xg0w.mp4"
              }
            },
            {
              "id": 851097,
              "key": "9eff2705-196e-427b-a8fb-31e3e4707cd4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Content Delivery in the Cloud</h1>\n\nA Content Delivery Network (or CDN) speeds up delivery of your static and dynamic web content by caching content in an Edge Location close to your user base.\n\n<h1>Benefits</h1>\nThe benefits of a CDN includes:\n<ul>\n<li>low latency </li>\n<li>decreased server load</li>\n<li>better user experience</li>\n</ul>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850129,
          "key": "dc135805-132f-4d18-87c0-f6c951e96ea2",
          "title": "Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dc135805-132f-4d18-87c0-f6c951e96ea2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850132,
              "key": "87f6ea0b-1990-4603-9dd6-d5621faa5708",
              "title": "CloudEng Course1 Lesson3 CloudFront(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nmK8dr7XrRg",
                "china_cdn_id": "nmK8dr7XrRg.mp4"
              }
            },
            {
              "id": 851098,
              "key": "3884857b-56f9-4bdc-9e4e-02572e1a0aa1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Cloud Front</h1>\n\nCloudFront is used as a global content delivery network (CDN). Cloud Front speeds up the delivery of your content through Amazon's worldwide network of mini-data centers called Edge Locations.\n\nCloudFront works with other AWS services, as shown below, as an origin source for your application:\n\n<ul>\n<li>Amazon S3</li>\n<li>Elastic Load Balancing </li>\n<li>Amazon EC2 </li>\n<li>Lambda@Edge </li>\n<li> AWS Shield </li>\n</ul>\n\n<h1>Tips</h1>\n<ul>\n<li>CloudFront is found under the Networking & Content Delivery section on the AWS Management Console.</li>\n<li>Amazon countinously adds new Edge Locations.</li>\n<li>CloudFront ensures that end-user requests are served from the closest edge location.</li>\n<li>CloudFront works with non-AWS origin sources.</li>\n<li>You can use  GeoIP blocking to serve content (or not serve content) to specific countries.</li>\n<li>Cache control headers determine how frequently CloudFront needs to check the origin for an updated version your file.</li>\n<li>The maximum size of a single file that can be delivered through Amazon CloudFront is 20 GB.</li>\n</ul>\n\n",
              "instructor_notes": ""
            },
            {
              "id": 851099,
              "key": "d4649cec-d5eb-48f0-b70c-f33cb4226358",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d4649cec-d5eb-48f0-b70c-f33cb4226358",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What happens if the content is not found in the edge location when a user requests your application?",
                "answers": [
                  {
                    "id": "a1558823936414",
                    "text": "The user is forwarded to the origin source servers",
                    "is_correct": false
                  },
                  {
                    "id": "a1558823949077",
                    "text": "The user receives a 404 Not Found error message",
                    "is_correct": false
                  },
                  {
                    "id": "a1558823950044",
                    "text": "Files are pulled from the origin",
                    "is_correct": true
                  },
                  {
                    "id": "a1558823950849",
                    "text": "Another edge location further away is checked for the content",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 851100,
              "key": "0a2b22bc-a338-4ab2-aa6a-803ce7f559cf",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0a2b22bc-a338-4ab2-aa6a-803ce7f559cf",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is one reason you'd want to use Cloud Front?",
                "answers": [
                  {
                    "id": "a1558825230917",
                    "text": "Encrypt data in transit",
                    "is_correct": false
                  },
                  {
                    "id": "a1558825247876",
                    "text": "Provide high latency",
                    "is_correct": false
                  },
                  {
                    "id": "a1558825248673",
                    "text": "Stream content efficiently",
                    "is_correct": true
                  },
                  {
                    "id": "a1558825249401",
                    "text": "Throttle web service requests",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859388,
              "key": "3ab71c4e-61d8-43aa-b77b-f25d213c49e5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon CloudFront Overview](https://aws.amazon.com/cloudfront/)\n* [What is Amazon CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850133,
          "key": "62926219-c90f-4c9e-8a8e-c663cef1eb44",
          "title": "Demo - Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "62926219-c90f-4c9e-8a8e-c663cef1eb44",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850134,
              "key": "205e8893-8021-4449-9301-2506d1177f2a",
              "title": "CloudEng Course1 Lesson3 CloudFront(PART TWO) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ST3ZOvVo36s",
                "china_cdn_id": "ST3ZOvVo36s.mp4"
              }
            }
          ]
        },
        {
          "id": 850130,
          "key": "45a99651-950e-47e7-a746-0fc9296b0d5a",
          "title": "Lab - S3 & Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "45a99651-950e-47e7-a746-0fc9296b0d5a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 851484,
              "key": "9b274016-d983-442d-9ed0-7f8599e0c1fa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# S3 & CloudFront\n---\nIn this hands-on exercise, you will create a S3 bucket with a Cloud Front distribution to speed up our the delivery of content to our website.\n\n## Prerequisites:\n* AWS Account\n\n## Topics Covered:\nBy the end of this lab, you will be able to:\n* Create and configure a bucket\n* Upload an object to a bucket\n* Create distribution\n\n## Steps:\n1. **Create S3 Bucket**\n    * On the AWS Management Console page, type `S3` in the `Find Services` box and then select `S3`.    \n    * Click `Create bucket`\n    * Enter a `Bucket name`.\n        * ***Note:*** Bucket names must be globally unique.\n    * Click the `Create` button.\n    * Once the bucket is created, click on the name of the bucket to open the bucket to the contents.\n2. **Upload Object to Bucket** \n    * Once the bucket is open to its contents, click the `Upload` button.\n    * Click the `Add Files` button.\n    * Select a file from your local computer to upload.\n    * Click `Open`.\n    * Click `Upload`.\n3. **Create CloudFront Distribution**\n    * Select `Services` from the top left corner.\n    * Enter `cloud front` in the `Find a service by name or feature` text box and select `Cloud Front`.\n    * Click `Create Distribution`.\n    * Under the `Web` delivery method, select `Get Started`.\n    * Under `Origin Settings`:\n    * Under `Origin Domain Name`, select the S3 bucket that you just created.\n    * Under `Origin Path`, enter `/` to indicate the root level.\n    * Leave the defaults for the rest of the options.\n    * Click `Create Distribution`.\n        * ***Note:*** It may take up to 10 minutes for the CloudFront Distribution to be created.\n4. **Delete Bucket and Distribution**\n    * To delete the Cloud Front distribution, click on the radio button next to the `Delivery Method` for the distribution. Click `Disable` and then `Yes, Disable`. Click `Close`.\n    * Once the distribution is disabled, you can delete it by selecting the radio button next to the `Delivery Method` and clicking the `Delete` button.\n    * To delete the S3 bucket, navigate to S3, but clicking on `Services` and typing `S3` in the `Find Services` box and then select `S3`.\n    * Select the radio button next to the name of the bucket you want to delete.\n    * Click `Delete`.\n    * Type the name of the bucket to confirm deletion.\n    * Click the `Confirm` button.\n\n\n<br/>",
              "instructor_notes": ""
            },
            {
              "id": 859389,
              "key": "58f2f105-06b4-407d-bfc3-4c648a4400fd",
              "title": "Create a S3 bucket with a Cloud Front distribution",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "58f2f105-06b4-407d-bfc3-4c648a4400fd",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create an S3 Bucket",
                "Upload Object to your Bucket",
                "Create CloudFront Distribution",
                "Delete Bucket and Distribution"
              ],
              "positive_feedback": "Amazing Work!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850131,
          "key": "ab12f158-000d-4fc5-8062-ae2cd058f6a9",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ab12f158-000d-4fc5-8062-ae2cd058f6a9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850531,
              "key": "8f68c27e-0323-47c3-9d7c-4be8e40aeb8d",
              "title": "CloudEng Course1 Lesson3 Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "VeB590QFc_o",
                "china_cdn_id": "VeB590QFc_o.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}